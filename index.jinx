import flash.external.ExternalInterface;
import flash.events.ErrorEvent;
import flash.events.UncaughtErrorEvent;

var _extend = function (destObj) {
	for (var i = 1; i < arguments.length; i++) {
		for (var key in arguments[i]) {
			destObj[key] = arguments[i][key];
		}
	}
	return destObj;
};

module.exports = function(options){
	var defaults = {
		deepDir:2,
		maxStack:3
	};

	options = _extend({},defaults,options);
	function uncaughtErrorHandler(event:UncaughtErrorEvent):void {
		var errorText:String;
		var errorObj:Object = {};
		var stack:String;
		if( event.error is Error ) {
			errorText = (event.error as Error).message;
			errorObj.msg = errorText;
			stack = (event.error as Error).getStackTrace();
			errorObj.stack = stack;
			if(stack != null){ errorText += stack; }
		} else if( event.error is ErrorEvent ) {
			errorText = (event.error as ErrorEvent).text;
		} else {
			errorText = event.text;
		}
		event.preventDefault();

		var resp = [];
		var asSplit = errorText.split(".as:");
		for(var i=1;i<asSplit.length;i++){
			var dir = [];
			for(var k=options.deepDir;k>0;--k) dir.push(asSplit[i-1].split('\\').slice(k*-1)[0]);
			resp.push(dir.join("/")+".as:"+asSplit[i].split("]")[0]);
			if(options.maxStack && i>=options.maxStack) break;
		}

		ExternalInterface.call("console.log",errorObj.msg+"\n\n"+resp.join('\n'));
	}

	if(loaderInfo.hasOwnProperty("uncaughtErrorEvents")){
		loaderInfo.uncaughtErrorEvents.addEventListener(UncaughtErrorEvent.UNCAUGHT_ERROR, uncaughtErrorHandler);
	}
}
